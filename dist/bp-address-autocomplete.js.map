{"version":3,"file":"bp-address-autocomplete.js","sourceRoot":"","sources":["../src/bp-address-autocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { Address } from './address';\nimport {createRef, Ref, ref} from 'lit/directives/ref.js';\n\n@customElement('bp-address-autocomplete')\nexport class BpAddressAutocomplete extends LitElement {\n\n  static override styles = [css`.address{cursor: pointer}`];\n\n  inputRef: Ref<HTMLInputElement> = createRef();\n  \n  @property({ type: Array<Address> })\n  suggestions = [];\n\n  @property({ type: Number })\n  count = 0;\n\n  @property()\n  timeoutId: string | number | NodeJS.Timeout | undefined\n\n  @property({ type: Number })\n  timeout = 200;\n\n  @property({ type: String })\n  street = \"\";\n\n  @property({ type: String })\n  houseNumber = \"\";\n\n  @property({ type: String })\n  locality = \"\";\n\n  @property({ type: String })\n  postalCode = \"\";\n\n  @property({ type: String })\n  latitude = \"\";\n\n  @property({ type: String })\n  longitude = \"\";\n\n  private _onClick(ev: { target: { id: string | number; }; }) {\n    let item: Address = this.suggestions.find((el: Address) => el.id === +ev.target.id)!;\n    let { inputStreet, inputHouseNumber, inputLocality, inputPostalCode, inputLatitude, inputLongitude } = this._getInputs();\n    if (item != undefined) {\n      this._autoComplete(item, inputStreet, inputHouseNumber, inputLocality, inputPostalCode, inputLatitude, inputLongitude);\n      let searchBar = this.inputRef.value!;\n      searchBar.value = \"\";\n      this.suggestions = []\n    }\n    let itemClick = new CustomEvent(\"onSelectedAddress\", { detail: item });\n    this.dispatchEvent(itemClick)\n  }\n\n  private _autoComplete(item: Address, inputStreet: HTMLInputElement, inputHouseNumber: HTMLInputElement , inputLocality: HTMLInputElement, inputPostalCode: HTMLInputElement, inputLatitude: HTMLInputElement, inputLongitude: HTMLInputElement) {\n    inputStreet != null ? inputStreet.value = item.streetName : \"\";\n    inputHouseNumber != null ? inputHouseNumber.value = item.houseNumber: \"\";\n    inputLocality != null ? inputLocality.value = item.locality : \"\";\n    inputPostalCode != null ? inputPostalCode.value = item.postalCode : \"\";\n    inputLatitude != null ? inputLatitude.value = item.latitude.toString() : \"\";\n    inputLongitude != null ? inputLongitude.value = item.longitude.toString() : \"\";\n  }\n\n  private _getInputs() {\n    let inputStreet = this._nearest(this, this.street);\n    let inputHouseNumber = this._nearest(this, this.houseNumber);\n    let inputLocality = this._nearest(this, this.locality);\n    let inputPostalCode = this._nearest(this, this.postalCode);\n    let inputLatitude = this._nearest(this, this.latitude);\n    let inputLongitude = this._nearest(this, this.longitude);\n    return { inputStreet, inputLocality, inputPostalCode, inputLatitude, inputLongitude, inputHouseNumber};\n  }\n\n  private _nearest(currentElement: Element, id: String) {\n    const elements = document.querySelectorAll(`[id=\"${id}\"]`);\n    let minDistance = -1;\n    let closestElement = null;\n  \n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      const distance = Math.abs(currentElement.compareDocumentPosition(element));\n  \n      if (distance > minDistance) {\n        minDistance = distance;\n        closestElement = element;\n      }\n    }\n  \n    return <HTMLInputElement>closestElement;\n  }\n\n  private async _changeAddress(event: { target: any; }) {\n    const input = event.target;\n    clearTimeout(this.timeoutId)\n    this.timeoutId = setTimeout(async () => {\n      await this._sendRequest(input);\n    }, this.timeout)\n  }\n\n  private async _sendRequest(input: { value: any; }) {\n    this.count++;\n    await fetch(`https://webservices-pub.bpost.be/ws/ExternalMailingAddressProofingCSREST_v1/address/autocomplete?id=${this.count}&q=${input.value}`, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n      },\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not OK\");\n      }\n      return response.json();\n    }).then(value => {\n      this.suggestions = value.response.topSuggestions != null ? value.response.topSuggestions.map((item: any, index: Number) => new Address(item, index)) : []\n    }).catch(() => {\n      this.suggestions = []\n    });\n  }\n\n  override render() {\n    return html`\n      <div>\n        <input ${ref(this.inputRef)} @input=${this._changeAddress} type=\"text\" part=\"search-bar\" placeholder=\"Street, city or postcode\" />\n        <ul part=\"ul-suggestions\">\n          ${this.suggestions.map((item: Address) => html`<li id=${item.id} part=\"li-suggestion\" class=\"address\" @click=${this._onClick}>${item.string}</li>`)}\n        </ul>\n      </div>\n      `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'bp-address-autocomplete': BpAddressAutocomplete;\n  }\n}"]}